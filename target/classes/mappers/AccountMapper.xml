<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.AccountMapper">
    <insert id="signup">
        <!-- db 구조 -->
        INSERT INTO `account`(`email`, `password`, `name`, `nickname`)
        VALUES (#{account.email}, #{account.password}, #{account.name}, #{account.nickname})
    </insert>

    <update id="reSignup">
        UPDATE `account`
        SET `password` = #{account.password},
            `name`     = #{account.name},
            `nickname` = #{account.nickname},
            `point`         = 0,
            `level`         = 0,
            `deleted_at` = NULL
        WHERE `uid` = #{uid}
    </update>

    <update id="setSalt">
        UPDATE `account`
        SET `salt` = #{salt}
        WHERE `uid` = #{uid}
    </update>

    <select id="isExistEmail" resultType="Boolean">
        SELECT EXISTS(
                       SELECT `uid`
                       FROM `account`
                       WHERE `email` = #{email}
                       LIMIT 1
                   );
    </select>

    <select id="isExistNickName" resultType="Boolean">
        SELECT EXISTS(
                       SELECT `uid`
                       FROM `account`
                       WHERE `nickname` = #{nickname}
                       LIMIT 1
                   );
    </select>

    <select id="getUidToEmail" resultType="Long">
        SELECT `uid`
        FROM account
        WHERE `email` = #{email}
    </select>

    <select id="getSaltToUid" resultType="string">
        SELECT `salt`
        FROM account
        WHERE `uid` = #{uid}
    </select>

    <select id="getPasswordToEamil" resultType="string">
        SELECT `salt`
        FROM account
        WHERE `email` = #{email}
    </select>

    <select id="getLoginInfoToEmail" resultType="domain.entity.origin_mapping.AccountEntity">
        SELECT `uid`, `password`, `nickname`, `salt`
        FROM `account`
        WHERE `email` = #{email}
    </select>

    <select id="getWithdrawInfoToUid" resultType="domain.entity.origin_mapping.AccountEntity">
        SELECT `email`, `password`, `name`
        FROM `account`
        WHERE `uid` = #{uid}
    </select>

    <update id="withdraw">
        UPDATE `account`
        SET `password` = NULL,
            `name`     = NULL,
            `nickname` = NULL,
            `point`         = NULL,
            `level`         = NULL,
            `deleted_at` = current_timestamp(),
            `salt`         = NULL
            WHERE `uid` = #{uid}
    </update>
</mapper>