<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.BoardMapper">
    <!--    CRUD    -->
    <insert id="createBoard">
        <!-- db 구조 -->
        INSERT INTO board(`title`, `body`, `account_uid`)
        VALUES (#{board.title}, #{board.body}, #{uid});
    </insert>

    <select id="getSummaryBoardList" resultType="domain.entity.BoardSummaryEntity">
        SELECT B.`uid`,
               B.`title`,
               A.`nickname`,
               B.`created_at`,
               B.`updated_at`,
               (SELECT count(*)
                FROM board_emotion
                WHERE board_uid = B.uid) as emotion
        FROM board B
                 LEFT OUTER JOIN
             account A
             ON
                 B.`account_uid` = A.`uid`
        ORDER BY B.`created_at` DESC
            LIMIT ${page}, ${range};
    </select>

    <select id="getBoardListCnt" resultType="Long">
        SELECT count(*)
        FROM board;
    </select>

    <select id="getBoardInfo" resultType="domain.entity.BoardEntity">
        SELECT B.`uid`,
               B.`title`,
               B.`body`,
               A.`nickname`,
               B.`account_uid`,
               B.`created_at`,
               B.`updated_at`,
               (SELECT count(*)
                FROM board_emotion
                WHERE `board_uid` = B.`uid`) as emotion
        FROM board B
                 LEFT OUTER JOIN
             account A
             ON
                 B.`account_uid` = A.`uid`
        WHERE B.`uid` = #{board_uid};
    </select>

    <update id="updateBoard">
        UPDATE `board`
        SET `title` = #{board.title},
            `body`  = #{board.body}
        WHERE `uid` = #{board.uid}
    </update>

    <delete id="deleteBoard">
        DELETE
        FROM board
        WHERE `uid` = ${board_uid};
    </delete>

    <!--    func    -->

    <select id="getAccountUid" resultType="Long">
        SELECT `account_uid`
        FROM board
        WHERE `uid` = #{board_uid};
    </select>

    <insert id="createBoardEmotion">
        <!-- db 구조 -->
        INSERT INTO board_emotion(`board_uid`, `account_uid`, `status`)
        VALUES (#{board_uid}, #{account_uid}, #{status});
    </insert>

    <delete id="deleteBoardEmotion">
        DELETE
        FROM board_emotion
        WHERE `board_uid` = ${board_uid}
          AND `account_uid` = ${account_uid};
    </delete>

    <select id="getBoardEmotion" resultType="domain.entity.BoardEmotionEntity">
        SELECT BE.`account_uid`,
               A.`nickname`,
               BE.`status`
        FROM `board_emotion` BE
                 LEFT OUTER JOIN
             `account` A
             ON
                 A.`uid` = BE.`account_uid`
        WHERE `board_uid` = #{board_uid};
    </select>

    <select id="isBoard" resultType="Boolean">
        SELECT EXISTS(
                       SELECT `uid`
                       FROM `board`
                       WHERE `uid` = #{board_uid}
                       LIMIT 1
                   );
    </select>
</mapper>