<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.AccountMapper">
    <resultMap id="Account" type="domain.dto.AccountDTO">
        <result property="uid" column="uid"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="point" column="point"/>
        <result property="level" column="level"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="salt" column="salt"/>

    </resultMap>

    <insert id="signup">
        INSERT INTO `account`(`email`, `password`, `name`, `nickname`)
        VALUES (#{account.email}, #{account.password}, #{account.name}, #{account.nickname})
    </insert>

    <update id="reSignup">
        UPDATE `account`
        SET `password` = #{account.password},
            `name`     = #{account.name},
            `nickname` = #{account.nickname},
            `point`    = 0,
            `level`    = 0
        WHERE `uid` = #{uid}
    </update>

    <update id="setSalt">
        UPDATE `account`
        SET `salt` = #{salt}
        WHERE `uid` = #{uid}
    </update>

    <select id="isExistEmail" resultType="Boolean">
        SELECT EXISTS(
                       SELECT `uid`
                       FROM `account`
                       WHERE `email` = #{email}
                       LIMIT 1
                   );
    </select>

    <select id="isExistNickName" resultType="Boolean">
        SELECT EXISTS(
                       SELECT `uid`
                       FROM `account`
                       WHERE `nickname` = #{nickname}
                       LIMIT 1
                   );
    </select>

    <select id="getUidToEmail" resultType="Long">
        SELECT `uid`
        FROM account
        WHERE `email` = #{email}
    </select>

    <select id="getSaltToUid" resultType="string">
        SELECT `salt`
        FROM account
        WHERE `uid` = #{uid}
    </select>

    <select id="getPasswordToEamil" resultType="string">
        SELECT `salt`
        FROM account
        WHERE `email` = #{email}
    </select>

    <select id="getLoginInfoToEmail" resultType="domain.dto.AccountDTO">
        SELECT `uid`, `password`, `nickname`, `salt`
        FROM `account`
        WHERE `email` = #{email}
    </select>

    <select id="getWithdrawInfoToUid" resultType="domain.dto.AccountDTO">
        SELECT `email`, `password`, `name`
        FROM `account`
        WHERE `uid` = #{uid}
    </select>

    <delete id="withdraw">
        DELETE
        FROM `account`
        WHERE `uid` = #{uid}
    </delete>
</mapper>